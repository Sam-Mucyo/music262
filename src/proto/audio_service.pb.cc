// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: audio_service.proto
// Protobuf C++ Version: 5.29.3

#include "audio_service.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace audio_service {

inline constexpr PlaylistResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : song_names_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR PlaylistResponse::PlaylistResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct PlaylistResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PlaylistResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PlaylistResponseDefaultTypeInternal() {}
  union {
    PlaylistResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PlaylistResponseDefaultTypeInternal _PlaylistResponse_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR PlaylistRequest::PlaylistRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct PlaylistRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PlaylistRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PlaylistRequestDefaultTypeInternal() {}
  union {
    PlaylistRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PlaylistRequestDefaultTypeInternal _PlaylistRequest_default_instance_;

inline constexpr PeerListResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : client_ips_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR PeerListResponse::PeerListResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct PeerListResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PeerListResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PeerListResponseDefaultTypeInternal() {}
  union {
    PeerListResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PeerListResponseDefaultTypeInternal _PeerListResponse_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR PeerListRequest::PeerListRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct PeerListRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PeerListRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PeerListRequestDefaultTypeInternal() {}
  union {
    PeerListRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PeerListRequestDefaultTypeInternal _PeerListRequest_default_instance_;

inline constexpr LoadAudioRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : song_num_{0},
        channel_index_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR LoadAudioRequest::LoadAudioRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct LoadAudioRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LoadAudioRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~LoadAudioRequestDefaultTypeInternal() {}
  union {
    LoadAudioRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LoadAudioRequestDefaultTypeInternal _LoadAudioRequest_default_instance_;

inline constexpr AudioChunk::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : data_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR AudioChunk::AudioChunk(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct AudioChunkDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AudioChunkDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AudioChunkDefaultTypeInternal() {}
  union {
    AudioChunk _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AudioChunkDefaultTypeInternal _AudioChunk_default_instance_;
}  // namespace audio_service
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_audio_5fservice_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_audio_5fservice_2eproto = nullptr;
const ::uint32_t
    TableStruct_audio_5fservice_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::audio_service::PlaylistRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::audio_service::PlaylistResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::audio_service::PlaylistResponse, _impl_.song_names_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::audio_service::LoadAudioRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::audio_service::LoadAudioRequest, _impl_.song_num_),
        PROTOBUF_FIELD_OFFSET(::audio_service::LoadAudioRequest, _impl_.channel_index_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::audio_service::AudioChunk, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::audio_service::AudioChunk, _impl_.data_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::audio_service::PeerListRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::audio_service::PeerListResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::audio_service::PeerListResponse, _impl_.client_ips_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::audio_service::PlaylistRequest)},
        {8, -1, -1, sizeof(::audio_service::PlaylistResponse)},
        {17, -1, -1, sizeof(::audio_service::LoadAudioRequest)},
        {27, -1, -1, sizeof(::audio_service::AudioChunk)},
        {36, -1, -1, sizeof(::audio_service::PeerListRequest)},
        {44, -1, -1, sizeof(::audio_service::PeerListResponse)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::audio_service::_PlaylistRequest_default_instance_._instance,
    &::audio_service::_PlaylistResponse_default_instance_._instance,
    &::audio_service::_LoadAudioRequest_default_instance_._instance,
    &::audio_service::_AudioChunk_default_instance_._instance,
    &::audio_service::_PeerListRequest_default_instance_._instance,
    &::audio_service::_PeerListResponse_default_instance_._instance,
};
const char descriptor_table_protodef_audio_5fservice_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\023audio_service.proto\022\raudio_service\"\021\n\017"
    "PlaylistRequest\"&\n\020PlaylistResponse\022\022\n\ns"
    "ong_names\030\001 \003(\t\";\n\020LoadAudioRequest\022\020\n\010s"
    "ong_num\030\001 \001(\005\022\025\n\rchannel_index\030\002 \001(\005\"\032\n\n"
    "AudioChunk\022\014\n\004data\030\001 \001(\014\"\021\n\017PeerListRequ"
    "est\"&\n\020PeerListResponse\022\022\n\nclient_ips\030\001 "
    "\003(\t2\377\001\n\raudio_service\022N\n\013GetPlaylist\022\036.a"
    "udio_service.PlaylistRequest\032\037.audio_ser"
    "vice.PlaylistResponse\022I\n\tLoadAudio\022\037.aud"
    "io_service.LoadAudioRequest\032\031.audio_serv"
    "ice.AudioChunk0\001\022S\n\020GetPeerClientIPs\022\036.a"
    "udio_service.PeerListRequest\032\037.audio_ser"
    "vice.PeerListResponseb\006proto3"
};
static ::absl::once_flag descriptor_table_audio_5fservice_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_audio_5fservice_2eproto = {
    false,
    false,
    509,
    descriptor_table_protodef_audio_5fservice_2eproto,
    "audio_service.proto",
    &descriptor_table_audio_5fservice_2eproto_once,
    nullptr,
    0,
    6,
    schemas,
    file_default_instances,
    TableStruct_audio_5fservice_2eproto::offsets,
    file_level_enum_descriptors_audio_5fservice_2eproto,
    file_level_service_descriptors_audio_5fservice_2eproto,
};
namespace audio_service {
// ===================================================================

class PlaylistRequest::_Internal {
 public:
};

PlaylistRequest::PlaylistRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(arena_constructor:audio_service.PlaylistRequest)
}
PlaylistRequest::PlaylistRequest(
    ::google::protobuf::Arena* arena,
    const PlaylistRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  PlaylistRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:audio_service.PlaylistRequest)
}

inline void* PlaylistRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) PlaylistRequest(arena);
}
constexpr auto PlaylistRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(PlaylistRequest),
                                            alignof(PlaylistRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull PlaylistRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_PlaylistRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &PlaylistRequest::MergeImpl,
        ::google::protobuf::internal::ZeroFieldsBase::GetNewImpl<PlaylistRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &PlaylistRequest::SharedDtor,
        ::google::protobuf::internal::ZeroFieldsBase::GetClearImpl<PlaylistRequest>(), &PlaylistRequest::ByteSizeLong,
            &PlaylistRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(PlaylistRequest, _impl_._cached_size_),
        false,
    },
    &PlaylistRequest::kDescriptorMethods,
    &descriptor_table_audio_5fservice_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* PlaylistRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 0, 0, 0, 2> PlaylistRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    0, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967295,  // skipmap
    offsetof(decltype(_table_), field_names),  // no field_entries
    0,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::audio_service::PlaylistRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }},
  // no field_entries, or aux_entries
  {{
  }},
};








::google::protobuf::Metadata PlaylistRequest::GetMetadata() const {
  return ::google::protobuf::internal::ZeroFieldsBase::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class PlaylistResponse::_Internal {
 public:
};

PlaylistResponse::PlaylistResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:audio_service.PlaylistResponse)
}
inline PROTOBUF_NDEBUG_INLINE PlaylistResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::audio_service::PlaylistResponse& from_msg)
      : song_names_{visibility, arena, from.song_names_},
        _cached_size_{0} {}

PlaylistResponse::PlaylistResponse(
    ::google::protobuf::Arena* arena,
    const PlaylistResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  PlaylistResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:audio_service.PlaylistResponse)
}
inline PROTOBUF_NDEBUG_INLINE PlaylistResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : song_names_{visibility, arena},
        _cached_size_{0} {}

inline void PlaylistResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
PlaylistResponse::~PlaylistResponse() {
  // @@protoc_insertion_point(destructor:audio_service.PlaylistResponse)
  SharedDtor(*this);
}
inline void PlaylistResponse::SharedDtor(MessageLite& self) {
  PlaylistResponse& this_ = static_cast<PlaylistResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PlaylistResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) PlaylistResponse(arena);
}
constexpr auto PlaylistResponse::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(PlaylistResponse, _impl_.song_names_) +
          decltype(PlaylistResponse::_impl_.song_names_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(PlaylistResponse), alignof(PlaylistResponse), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&PlaylistResponse::PlacementNew_,
                                 sizeof(PlaylistResponse),
                                 alignof(PlaylistResponse));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull PlaylistResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_PlaylistResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &PlaylistResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<PlaylistResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &PlaylistResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<PlaylistResponse>(), &PlaylistResponse::ByteSizeLong,
            &PlaylistResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(PlaylistResponse, _impl_._cached_size_),
        false,
    },
    &PlaylistResponse::kDescriptorMethods,
    &descriptor_table_audio_5fservice_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* PlaylistResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 49, 2> PlaylistResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::audio_service::PlaylistResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated string song_names = 1;
    {::_pbi::TcParser::FastUR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(PlaylistResponse, _impl_.song_names_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated string song_names = 1;
    {PROTOBUF_FIELD_OFFSET(PlaylistResponse, _impl_.song_names_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
  }},
  // no aux_entries
  {{
    "\36\12\0\0\0\0\0\0"
    "audio_service.PlaylistResponse"
    "song_names"
  }},
};

PROTOBUF_NOINLINE void PlaylistResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:audio_service.PlaylistResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.song_names_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* PlaylistResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const PlaylistResponse& this_ = static_cast<const PlaylistResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* PlaylistResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const PlaylistResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:audio_service.PlaylistResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated string song_names = 1;
          for (int i = 0, n = this_._internal_song_names_size(); i < n; ++i) {
            const auto& s = this_._internal_song_names().Get(i);
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "audio_service.PlaylistResponse.song_names");
            target = stream->WriteString(1, s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:audio_service.PlaylistResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t PlaylistResponse::ByteSizeLong(const MessageLite& base) {
          const PlaylistResponse& this_ = static_cast<const PlaylistResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t PlaylistResponse::ByteSizeLong() const {
          const PlaylistResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:audio_service.PlaylistResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated string song_names = 1;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_song_names().size());
              for (int i = 0, n = this_._internal_song_names().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_song_names().Get(i));
              }
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void PlaylistResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<PlaylistResponse*>(&to_msg);
  auto& from = static_cast<const PlaylistResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:audio_service.PlaylistResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_song_names()->MergeFrom(from._internal_song_names());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PlaylistResponse::CopyFrom(const PlaylistResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:audio_service.PlaylistResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void PlaylistResponse::InternalSwap(PlaylistResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.song_names_.InternalSwap(&other->_impl_.song_names_);
}

::google::protobuf::Metadata PlaylistResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class LoadAudioRequest::_Internal {
 public:
};

LoadAudioRequest::LoadAudioRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:audio_service.LoadAudioRequest)
}
LoadAudioRequest::LoadAudioRequest(
    ::google::protobuf::Arena* arena, const LoadAudioRequest& from)
    : LoadAudioRequest(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE LoadAudioRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void LoadAudioRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, song_num_),
           0,
           offsetof(Impl_, channel_index_) -
               offsetof(Impl_, song_num_) +
               sizeof(Impl_::channel_index_));
}
LoadAudioRequest::~LoadAudioRequest() {
  // @@protoc_insertion_point(destructor:audio_service.LoadAudioRequest)
  SharedDtor(*this);
}
inline void LoadAudioRequest::SharedDtor(MessageLite& self) {
  LoadAudioRequest& this_ = static_cast<LoadAudioRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* LoadAudioRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) LoadAudioRequest(arena);
}
constexpr auto LoadAudioRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(LoadAudioRequest),
                                            alignof(LoadAudioRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull LoadAudioRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_LoadAudioRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &LoadAudioRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<LoadAudioRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &LoadAudioRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<LoadAudioRequest>(), &LoadAudioRequest::ByteSizeLong,
            &LoadAudioRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(LoadAudioRequest, _impl_._cached_size_),
        false,
    },
    &LoadAudioRequest::kDescriptorMethods,
    &descriptor_table_audio_5fservice_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* LoadAudioRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> LoadAudioRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::audio_service::LoadAudioRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // int32 channel_index = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(LoadAudioRequest, _impl_.channel_index_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(LoadAudioRequest, _impl_.channel_index_)}},
    // int32 song_num = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(LoadAudioRequest, _impl_.song_num_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(LoadAudioRequest, _impl_.song_num_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 song_num = 1;
    {PROTOBUF_FIELD_OFFSET(LoadAudioRequest, _impl_.song_num_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 channel_index = 2;
    {PROTOBUF_FIELD_OFFSET(LoadAudioRequest, _impl_.channel_index_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void LoadAudioRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:audio_service.LoadAudioRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.song_num_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.channel_index_) -
      reinterpret_cast<char*>(&_impl_.song_num_)) + sizeof(_impl_.channel_index_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* LoadAudioRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const LoadAudioRequest& this_ = static_cast<const LoadAudioRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* LoadAudioRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const LoadAudioRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:audio_service.LoadAudioRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // int32 song_num = 1;
          if (this_._internal_song_num() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<1>(
                    stream, this_._internal_song_num(), target);
          }

          // int32 channel_index = 2;
          if (this_._internal_channel_index() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<2>(
                    stream, this_._internal_channel_index(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:audio_service.LoadAudioRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t LoadAudioRequest::ByteSizeLong(const MessageLite& base) {
          const LoadAudioRequest& this_ = static_cast<const LoadAudioRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t LoadAudioRequest::ByteSizeLong() const {
          const LoadAudioRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:audio_service.LoadAudioRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // int32 song_num = 1;
            if (this_._internal_song_num() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_song_num());
            }
            // int32 channel_index = 2;
            if (this_._internal_channel_index() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_channel_index());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void LoadAudioRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<LoadAudioRequest*>(&to_msg);
  auto& from = static_cast<const LoadAudioRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:audio_service.LoadAudioRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_song_num() != 0) {
    _this->_impl_.song_num_ = from._impl_.song_num_;
  }
  if (from._internal_channel_index() != 0) {
    _this->_impl_.channel_index_ = from._impl_.channel_index_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void LoadAudioRequest::CopyFrom(const LoadAudioRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:audio_service.LoadAudioRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void LoadAudioRequest::InternalSwap(LoadAudioRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(LoadAudioRequest, _impl_.channel_index_)
      + sizeof(LoadAudioRequest::_impl_.channel_index_)
      - PROTOBUF_FIELD_OFFSET(LoadAudioRequest, _impl_.song_num_)>(
          reinterpret_cast<char*>(&_impl_.song_num_),
          reinterpret_cast<char*>(&other->_impl_.song_num_));
}

::google::protobuf::Metadata LoadAudioRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class AudioChunk::_Internal {
 public:
};

AudioChunk::AudioChunk(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:audio_service.AudioChunk)
}
inline PROTOBUF_NDEBUG_INLINE AudioChunk::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::audio_service::AudioChunk& from_msg)
      : data_(arena, from.data_),
        _cached_size_{0} {}

AudioChunk::AudioChunk(
    ::google::protobuf::Arena* arena,
    const AudioChunk& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  AudioChunk* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:audio_service.AudioChunk)
}
inline PROTOBUF_NDEBUG_INLINE AudioChunk::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : data_(arena),
        _cached_size_{0} {}

inline void AudioChunk::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
AudioChunk::~AudioChunk() {
  // @@protoc_insertion_point(destructor:audio_service.AudioChunk)
  SharedDtor(*this);
}
inline void AudioChunk::SharedDtor(MessageLite& self) {
  AudioChunk& this_ = static_cast<AudioChunk&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.data_.Destroy();
  this_._impl_.~Impl_();
}

inline void* AudioChunk::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) AudioChunk(arena);
}
constexpr auto AudioChunk::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(AudioChunk),
                                            alignof(AudioChunk));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull AudioChunk::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_AudioChunk_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &AudioChunk::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<AudioChunk>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &AudioChunk::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<AudioChunk>(), &AudioChunk::ByteSizeLong,
            &AudioChunk::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(AudioChunk, _impl_._cached_size_),
        false,
    },
    &AudioChunk::kDescriptorMethods,
    &descriptor_table_audio_5fservice_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* AudioChunk::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> AudioChunk::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::audio_service::AudioChunk>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // bytes data = 1;
    {::_pbi::TcParser::FastBS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(AudioChunk, _impl_.data_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bytes data = 1;
    {PROTOBUF_FIELD_OFFSET(AudioChunk, _impl_.data_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void AudioChunk::Clear() {
// @@protoc_insertion_point(message_clear_start:audio_service.AudioChunk)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.data_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* AudioChunk::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const AudioChunk& this_ = static_cast<const AudioChunk&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* AudioChunk::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const AudioChunk& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:audio_service.AudioChunk)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // bytes data = 1;
          if (!this_._internal_data().empty()) {
            const std::string& _s = this_._internal_data();
            target = stream->WriteBytesMaybeAliased(1, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:audio_service.AudioChunk)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t AudioChunk::ByteSizeLong(const MessageLite& base) {
          const AudioChunk& this_ = static_cast<const AudioChunk&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t AudioChunk::ByteSizeLong() const {
          const AudioChunk& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:audio_service.AudioChunk)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // bytes data = 1;
            if (!this_._internal_data().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_data());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void AudioChunk::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<AudioChunk*>(&to_msg);
  auto& from = static_cast<const AudioChunk&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:audio_service.AudioChunk)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_data().empty()) {
    _this->_internal_set_data(from._internal_data());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AudioChunk::CopyFrom(const AudioChunk& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:audio_service.AudioChunk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void AudioChunk::InternalSwap(AudioChunk* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.data_, &other->_impl_.data_, arena);
}

::google::protobuf::Metadata AudioChunk::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class PeerListRequest::_Internal {
 public:
};

PeerListRequest::PeerListRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(arena_constructor:audio_service.PeerListRequest)
}
PeerListRequest::PeerListRequest(
    ::google::protobuf::Arena* arena,
    const PeerListRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  PeerListRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:audio_service.PeerListRequest)
}

inline void* PeerListRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) PeerListRequest(arena);
}
constexpr auto PeerListRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(PeerListRequest),
                                            alignof(PeerListRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull PeerListRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_PeerListRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &PeerListRequest::MergeImpl,
        ::google::protobuf::internal::ZeroFieldsBase::GetNewImpl<PeerListRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &PeerListRequest::SharedDtor,
        ::google::protobuf::internal::ZeroFieldsBase::GetClearImpl<PeerListRequest>(), &PeerListRequest::ByteSizeLong,
            &PeerListRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(PeerListRequest, _impl_._cached_size_),
        false,
    },
    &PeerListRequest::kDescriptorMethods,
    &descriptor_table_audio_5fservice_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* PeerListRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 0, 0, 0, 2> PeerListRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    0, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967295,  // skipmap
    offsetof(decltype(_table_), field_names),  // no field_entries
    0,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::audio_service::PeerListRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }},
  // no field_entries, or aux_entries
  {{
  }},
};








::google::protobuf::Metadata PeerListRequest::GetMetadata() const {
  return ::google::protobuf::internal::ZeroFieldsBase::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class PeerListResponse::_Internal {
 public:
};

PeerListResponse::PeerListResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:audio_service.PeerListResponse)
}
inline PROTOBUF_NDEBUG_INLINE PeerListResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::audio_service::PeerListResponse& from_msg)
      : client_ips_{visibility, arena, from.client_ips_},
        _cached_size_{0} {}

PeerListResponse::PeerListResponse(
    ::google::protobuf::Arena* arena,
    const PeerListResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  PeerListResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:audio_service.PeerListResponse)
}
inline PROTOBUF_NDEBUG_INLINE PeerListResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : client_ips_{visibility, arena},
        _cached_size_{0} {}

inline void PeerListResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
PeerListResponse::~PeerListResponse() {
  // @@protoc_insertion_point(destructor:audio_service.PeerListResponse)
  SharedDtor(*this);
}
inline void PeerListResponse::SharedDtor(MessageLite& self) {
  PeerListResponse& this_ = static_cast<PeerListResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PeerListResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) PeerListResponse(arena);
}
constexpr auto PeerListResponse::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(PeerListResponse, _impl_.client_ips_) +
          decltype(PeerListResponse::_impl_.client_ips_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(PeerListResponse), alignof(PeerListResponse), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&PeerListResponse::PlacementNew_,
                                 sizeof(PeerListResponse),
                                 alignof(PeerListResponse));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull PeerListResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_PeerListResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &PeerListResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<PeerListResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &PeerListResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<PeerListResponse>(), &PeerListResponse::ByteSizeLong,
            &PeerListResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(PeerListResponse, _impl_._cached_size_),
        false,
    },
    &PeerListResponse::kDescriptorMethods,
    &descriptor_table_audio_5fservice_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* PeerListResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 49, 2> PeerListResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::audio_service::PeerListResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated string client_ips = 1;
    {::_pbi::TcParser::FastUR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(PeerListResponse, _impl_.client_ips_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated string client_ips = 1;
    {PROTOBUF_FIELD_OFFSET(PeerListResponse, _impl_.client_ips_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
  }},
  // no aux_entries
  {{
    "\36\12\0\0\0\0\0\0"
    "audio_service.PeerListResponse"
    "client_ips"
  }},
};

PROTOBUF_NOINLINE void PeerListResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:audio_service.PeerListResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.client_ips_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* PeerListResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const PeerListResponse& this_ = static_cast<const PeerListResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* PeerListResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const PeerListResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:audio_service.PeerListResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated string client_ips = 1;
          for (int i = 0, n = this_._internal_client_ips_size(); i < n; ++i) {
            const auto& s = this_._internal_client_ips().Get(i);
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "audio_service.PeerListResponse.client_ips");
            target = stream->WriteString(1, s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:audio_service.PeerListResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t PeerListResponse::ByteSizeLong(const MessageLite& base) {
          const PeerListResponse& this_ = static_cast<const PeerListResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t PeerListResponse::ByteSizeLong() const {
          const PeerListResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:audio_service.PeerListResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated string client_ips = 1;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_client_ips().size());
              for (int i = 0, n = this_._internal_client_ips().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_client_ips().Get(i));
              }
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void PeerListResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<PeerListResponse*>(&to_msg);
  auto& from = static_cast<const PeerListResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:audio_service.PeerListResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_client_ips()->MergeFrom(from._internal_client_ips());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PeerListResponse::CopyFrom(const PeerListResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:audio_service.PeerListResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void PeerListResponse::InternalSwap(PeerListResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.client_ips_.InternalSwap(&other->_impl_.client_ips_);
}

::google::protobuf::Metadata PeerListResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace audio_service
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_audio_5fservice_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
