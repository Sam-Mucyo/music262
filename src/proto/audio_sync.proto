syntax = "proto3";

package client;

// Messages for peer2peer handshake
message JoinRequest {}
message JoinResponse {
  repeated string peer_list = 1; // list of known peer addresses
}

// Messages for ping
message PingRequest {}
message PingResponse {}

// Messages for music control
message MusicRequest {
  string action = 1;       // "play", "pause", "resume", "stop"
  float wall_clock = 2;    // wall clock time of action
  int32 position = 3;      // audio position in milliseconds
}

message MusicResponse {}

// Messages for querying position
message GetPositionRequest {}
message GetPositionResponse {
  int32 position = 1;
}

// Define the service
service ClientHandler {
  rpc Join(JoinRequest) returns (JoinResponse);
  rpc Ping(PingRequest) returns (PingResponse);
  rpc SendMusicCommand(MusicRequest) returns (MusicResponse);
  rpc GetPosition(GetPositionRequest) returns (GetPositionResponse);
}